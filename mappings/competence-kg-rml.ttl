@prefix kg: <https://knowledge.c-innovationhub.com/competence-kg/data#>.
@prefix onto: <https://knowledge.c-innovationhub.com/competence-kg/schema#>.
@prefix skos: <http://www.w3.org/2004/02/skos/core#>.
@prefix rr: <http://www.w3.org/ns/r2rml#>.
@prefix rml: <http://semweb.mmlab.be/ns/rml#>.
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>.
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#>.
@prefix xsd: <http://www.w3.org/2001/XMLSchema#>.
@prefix ql: <http://semweb.mmlab.be/ns/ql#>.
@prefix d2rq: <http://www.wiwiss.fu-berlin.de/suhl/bizer/D2RQ/0.1#>.
@prefix foaf: <http://xmlns.com/foaf/0.1/>.
@prefix schema: <http://schema.org/>.
@prefix formats: <http://www.w3.org/ns/formats/>.
@prefix comp: <http://semweb.mmlab.be/ns/rml-compression#>.
@prefix void: <http://rdfs.org/ns/void#>.
@prefix fnml: <http://semweb.mmlab.be/ns/fnml#>.
@prefix grel: <http://users.ugent.be/~bjdmeest/function/grel.ttl#>.
@base <http://example.com/ns#>.


<function_assignment_0> a fnml:Execution;
	fnml:function grel:controls_if ; 
	fnml:input
		[
			a fnml:Input;
			fnml:parameter grel:bool_b;
			fnml:valueMap [
				a fnml:ValueMap;
				rr:template "'1' == '{interest}'";
			];
		],
		[
			a fnml:Input;
			fnml:parameter grel:any_true;
			fnml:valueMap [
				a fnml:ValueMap;
				rr:constant true;
			];
		],
		[
			a fnml:Input;
			fnml:parameter grel:any_false;
			fnml:valueMap [
				a fnml:ValueMap;
				rr:constant false;
			];
		].

<unit_0> a rr:TriplesMap;

	rml:logicalSource [
		a rml:LogicalSource;
		rml:source "./../data/employees.csv";
		rml:referenceFormulation ql:CSV
	];
	rr:subjectMap [
		a rr:SubjectMap;
		rr:template "http://www.cefriel.com/competence-kg/data#Unit-{unit}";
	];
	rr:predicateObjectMap [
		rr:predicateMap [
			a rr:PredicateMap;
			rr:constant rdf:type;
		];
		rr:objectMap [
			a rr:ObjectMap;
			rr:constant foaf:Group;
		];
	];
	rr:predicateObjectMap [
		rr:predicateMap [
			a rr:PredicateMap;
			rr:constant foaf:title;
		];
		rr:objectMap [
			a rr:ObjectMap;
			rml:reference "unit";
		];
	].


<employee_0> a rr:TriplesMap;

	rml:logicalSource [
		a rml:LogicalSource;
		rml:source "./../data/employees.csv";
		rml:referenceFormulation ql:CSV
	];
	rr:subjectMap [
		a rr:SubjectMap;
		rr:template "http://www.cefriel.com/competence-kg/data#Employee-{id}";
	];
	rr:predicateObjectMap [
		rr:predicateMap [
			a rr:PredicateMap;
			rr:constant rdf:type;
		];
		rr:objectMap [
			a rr:ObjectMap;
			rr:constant foaf:Person;
		];
	];
	rr:predicateObjectMap [
		rr:predicateMap [
			a rr:PredicateMap;
			rr:constant rdf:type;
		];
		rr:objectMap [
			a rr:ObjectMap;
			rr:constant onto:Employee;
		];
	];
	rr:predicateObjectMap [
		rr:predicateMap [
			a rr:PredicateMap;
			rr:constant foaf:name;
		];
		rr:objectMap [
			a rr:ObjectMap;
			rml:reference "name";
		];
	];
	rr:predicateObjectMap [
		rr:predicateMap [
			a rr:PredicateMap;
			rr:constant foaf:surname;
		];
		rr:objectMap [
			a rr:ObjectMap;
			rml:reference "surname";
		];
	];
	rr:predicateObjectMap [
		rr:predicateMap [
			a rr:PredicateMap;
			rr:constant foaf:member;
		];
		rr:objectMap [ 
			a rr:RefObjectMap;
			rr:parentTriplesMap <unit_0>;
			rr:joinCondition [
				rr:child "unit";
				rr:parent "unit";
			]; 
		];
	].


<competences_0> a rr:TriplesMap;

	rml:logicalSource [
		a rml:LogicalSource;
		rml:source "./../data/competences-iri.csv";
		rml:referenceFormulation ql:CSV
	];
	rr:subjectMap [
		a rr:SubjectMap;
		rr:template "http://data.europa.eu/snb/dcf/{iri}";
	];
	rr:predicateObjectMap [
		rr:predicateMap [
			a rr:PredicateMap;
			rr:constant rdf:type;
		];
		rr:objectMap [
			a rr:ObjectMap;
			rr:constant onto:Competence;
		];
	].


<assignment_0> a rr:TriplesMap;

	rml:logicalSource [
		a rml:LogicalSource;
		rml:source "./../data/assignment-iri.csv";
		rml:referenceFormulation ql:CSV
	];
	rr:subjectMap [
		a rr:SubjectMap;
		rr:template "http://www.cefriel.com/competence-kg/data#Assignment-{employee_id}-{competence_id}";
	];
	rr:predicateObjectMap [
		rr:predicateMap [
			a rr:PredicateMap;
			rr:constant rdf:type;
		];
		rr:objectMap [
			a rr:ObjectMap;
			rr:constant onto:EmployeeCompetence;
		];
	];
	rr:predicateObjectMap [
		rr:predicateMap [
			a rr:PredicateMap;
			rr:constant onto:hasCompetenceLevel;
		];
		rr:objectMap [
			a rr:ObjectMap;
			rml:reference "level";
			rr:datatype xsd:int
		];
	];
	rr:predicateObjectMap [
		rr:predicateMap [
			a rr:PredicateMap;
			rr:constant onto:hasAssignedCompetence;
		];
		rr:objectMap [
			a rr:ObjectMap;
			rr:template "http://data.europa.eu/snb/dcf/{competence_id}";
		];
	];
	rr:predicateObjectMap [
		rr:predicateMap [
			a rr:PredicateMap;
			rr:constant onto:isAssignedToEmployee;
		];
		rr:objectMap [ 
			a rr:RefObjectMap;
			rr:parentTriplesMap <employee_0>;
			rr:joinCondition [
				rr:child "employee_id";
				rr:parent "id";
			]; 
		];
	];
	rr:predicateObjectMap [
		rr:predicateMap [
			a rr:PredicateMap;
			rr:constant onto:hasInterest;
		];
		rr:objectMap [
			a rr:ObjectMap;
			fnml:execution <function_assignment_0>;
		];
	].


